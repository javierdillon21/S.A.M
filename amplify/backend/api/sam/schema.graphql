type Miembro
  @model
  @key(name: "bySemillero", fields: ["semilleroID"])
  @key(name: "byEquipo", fields: ["equipoID"])
  @key(name: "byMinisterio", fields: ["ministerioID"]) {
  id: ID!
  foto: String
  # --- Añadidos recientemente
  tipo_documento_identidad: String! #CI - VISA - PASAPORTE
  titulo_profesional: String #título de tercer nivel
  # ----
  nombres: String!
  apellidos: String!
  seudonimo: String
  sexo: String!
  fecha_nacimiento: String
  nacionalidad: String
  ciudad_residencia: String
  direccion: String
  correo: String
  estado_civil: String
  sit_sentimental: String #Define la realidad amorosa de la persona, no es lo mismo que el estado legal civil.
  numero_hijos: Int
  nombre_conyuge: String
  ocupacion_laboral: String #profesional o no profesional
  lugar_trabajo: String #Nombre y y direccion de la empresa o sector laboral
  cargo_trabajo: String #cargo o puesto que desempeña
  tiempo_libre: String
  numero_hermanos: Int
  representanteID: ID
  parentesco_representante: String #relación con el representante
  lugar_estudio: String
  jornada_academica: String
  nivel_academico_actual: String #nivel académico en curso
  telefono_convencional: String
  telefono_celular: String
  whatsapp: String
  nombre_padre: String
  nombre_madre: String
  vive_con: String
  invitadorID: ID
  invitado_por: Miembro @connection(fields: ["invitadorID"])
  parentesco_invitador: String
  fecha_bautizo: String
  createdAt: AWSDate #Fecha de memebresía
  registrado_por: String
  status: String
  jerarquia: String
  asistencias: [Asistencia] @connection(keyName: "byMiembro", fields: ["id"])
  servicios: [Servicio] @connection(keyName: "byMiembro", fields: ["id"])
  representante: Miembro @connection(fields: ["representanteID"]) #miembro de la iglesia que lo representa
  semilleroID: ID
  semillero: Semillero @connection(fields: ["semilleroID"])
  equipoID: ID
  equipo: Equipo @connection(fields: ["equipoID"])
  ministerioID: ID
  ministerio: Ministerio @connection(fields: ["ministerioID"])
}

type Asistencia
  @model
  @key(name: "byMiembro", fields: ["miembroID"])
  @key(name: "byReunion", fields: ["reunionID"]) {
  miembroID: ID!
  reunionID: ID!
  miembro: Miembro @connection(fields: ["miembroID"])
  reunion: Reunion @connection(fields: ["reunionID"])
}

type Reunion @model @key(name: "byEquipo", fields: ["caracter"]) {
  id: ID!
  asistencia: [Asistencia] @connection(keyName: "byReunion", fields: ["id"])
  servidores: [Servicio]
    @connection(keyName: "servicioByReunion", fields: ["id"])
  caracter: String
  horario: String
  fecha: String
  lugar: String
}

type Servicio
  @model
  @key(name: "byMinisterio", fields: ["ministerioID"])
  @key(name: "byMiembro", fields: ["miembroID"])
  @key(name: "servicioByReunion", fields: ["reunionID"]) {
  ministerioID: ID!
  miembroID: ID!
  reunionID: ID!
  ministerio: Ministerio @connection(fields: ["ministerioID"])
  miembro: Miembro @connection(fields: ["miembroID"])
  reunion: Reunion @connection(fields: ["reunionID"])
}
type Ministerio @model @key(fields: ["nombre"]) {
  nombre: ID!
  servicios: [Servicio] @connection(keyName: "byMinisterio", fields: ["nombre"])
  servidores: [Miembro] @connection(keyName: "byMinisterio", fields: ["nombre"])
  administradorID: ID!
  administrador: Miembro @connection(fields: ["administradorID"])
}

type Equipo @model @key(fields: ["nombre"]) {
  nombre: ID!
  semilleros: [Semillero] @connection(keyName: "byEquipo", fields: ["nombre"])
  administradorID: ID
  caracter: String
  administrador: Miembro @connection(fields: ["administradorID"])
  miembros: [Miembro] @connection(keyName: "byEquipo", fields: ["nombre"])
  reuniones: [Reunion] @connection(keyName: "byEquipo", fields: ["caracter"])
}

type Semillero @model @key(name: "byEquipo", fields: ["id"]) {
  id: ID!
  equipoID: ID!
  administradorID: ID!
  dia: String
  horario: String
  lugar: String
  miembros: [Miembro] @connection(keyName: "bySemillero", fields: ["id"])
  equipo: Equipo @connection(fields: ["equipoID"])
  administrador: Miembro @connection(fields: ["administradorID"])
}
